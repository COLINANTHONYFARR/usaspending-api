{
  "final_name": "mv_covid_financial_account",
  "refresh": true,
  "matview_sql": [
    "WITH closed_submissions AS (",
    "  SELECT",
    "    dabs_submission_window_schedule.submission_reveal_date,",
    "    dabs_submission_window_schedule.submission_fiscal_year,",
    "    dabs_submission_window_schedule.is_quarter,",
    "    dabs_submission_window_schedule.submission_fiscal_month",
    "  FROM",
    "    dabs_submission_window_schedule",
    "  WHERE",
    "    dabs_submission_window_schedule.submission_reveal_date <= now()",
    ")",
    "SELECT",
    "  awards.id AS award_id,",
    "  awards.type,",
    "  financial_account_records.def_codes,",
    "",
    "  financial_account_records.outlay,",
    "  financial_account_records.obligation,",
    "  COALESCE(awards.total_loan_value, 0) AS total_loan_value,",
    "",
    "  COALESCE(recipient_lookup.recipient_hash, MD5(UPPER(",
    "    CASE",
    "      WHEN COALESCE(FPDS.awardee_or_recipient_uniqu, FABS.awardee_or_recipient_uniqu) IS NOT NULL",
    "        THEN CONCAT('duns-', COALESCE(FPDS.awardee_or_recipient_uniqu, FABS.awardee_or_recipient_uniqu))",
    "      ELSE CONCAT('name-', COALESCE(FPDS.awardee_or_recipient_legal, FABS.awardee_or_recipient_legal))",
    "    END",
    "  ))::uuid) AS recipient_hash,",
    "  UPPER(COALESCE(recipient_lookup.legal_business_name, FPDS.awardee_or_recipient_legal, FABS.awardee_or_recipient_legal)) AS recipient_name",
    "FROM (",
    "  SELECT",
    "    FABA.award_id,",
    "    ARRAY_AGG(DISTINCT FABA.disaster_emergency_fund_code ORDER BY FABA.disaster_emergency_fund_code) AS def_codes,",
    "    COALESCE(SUM(",
    "      CASE WHEN latest_closed_period_per_fy.is_quarter IS NOT NULL THEN FABA.gross_outlay_amount_by_award_cpe END",
    "    ), 0) AS outlay,",
    "    COALESCE(SUM(FABA.transaction_obligated_amount), 0) AS obligation",
    "  FROM",
    "    financial_accounts_by_awards AS FABA",
    "  INNER JOIN",
    "    disaster_emergency_fund_code AS DEFC ON (FABA.disaster_emergency_fund_code = DEFC.code and DEFC.group_name = 'covid_19')",
    "  INNER JOIN",
    "    submission_attributes AS SA ON (FABA.submission_id = SA.submission_id AND SA.reporting_period_start >= '2020-04-01')",
    "  INNER JOIN",
    "    closed_submissions",
    "      ON (SA.reporting_fiscal_period = closed_submissions.submission_fiscal_month",
    "      AND SA.quarter_format_flag = closed_submissions.is_quarter",
    "      AND SA.reporting_fiscal_year = closed_submissions.submission_fiscal_year)",
    "  LEFT JOIN (",
    "    SELECT",
    "      submission_fiscal_year,",
    "      is_quarter,",
    "      MAX(submission_fiscal_month) AS submission_fiscal_month",
    "    FROM",
    "      dabs_submission_window_schedule",
    "    WHERE",
    "      submission_reveal_date < now() AND period_start_date >= '2020-04-01'",
    "    GROUP BY",
    "      submission_fiscal_year,",
    "      is_quarter",
    "  ) AS latest_closed_period_per_fy",
    "    ON (latest_closed_period_per_fy.submission_fiscal_year = sa.reporting_fiscal_year",
    "      AND latest_closed_period_per_fy.submission_fiscal_month = sa.reporting_fiscal_period",
    "      AND latest_closed_period_per_fy.is_quarter = sa.quarter_format_flag)",
    "  WHERE",
    "    FABA.award_id IS NOT NULL",
    "  GROUP BY",
    "    FABA.award_id",
    ") AS financial_account_records",
    "INNER JOIN",
    "  awards ON (financial_account_records.award_id = awards.id)",
    "LEFT OUTER JOIN",
    "  transaction_fpds AS FPDS ON (awards.latest_transaction_id = FPDS.transaction_id)",
    "LEFT OUTER JOIN",
    "  transaction_fabs AS FABS on (awards.latest_transaction_id = FABS.transaction_id)",
    "LEFT OUTER JOIN",
    "  recipient_lookup ON (recipient_lookup.duns = COALESCE(FPDS.awardee_or_recipient_uniqu, FABS.awardee_or_recipient_uniqu)",
    "    AND COALESCE(FPDS.awardee_or_recipient_uniqu, FABS.awardee_or_recipient_uniqu) IS NOT NULL)",
    "WHERE",
    "  financial_account_records.outlay != 0",
    "  OR financial_account_records.obligation != 0",
    "  OR awards.total_loan_value != 0"
  ],
  "indexes": []
}