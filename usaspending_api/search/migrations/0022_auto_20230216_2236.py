# Generated by Django 3.2.15 on 2023-02-16 22:36

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('search', '0021_alter_transactionsearch_indirect_federal_sharing'),
    ]

    operations = [
        migrations.RemoveIndex(
            model_name='transactionsearch',
            name='ts_idx_is_fpds_pre2008',
        ),
        migrations.AddIndex(
            model_name='transactionsearch',
            index=models.Index(fields=['is_fpds'], name='ts_idx_is_fpds'),
        ),
        migrations.RunSQL(
            sql="CREATE UNIQUE INDEX ts_idx_is_fpds_transaction_id ON rpt.transaction_search(is_fpds bool_ops,transaction_id int8_ops);",
            reverse_sql="DROP INDEX rpt.ts_idx_is_fpds_transaction_id",
            # state_operations bring Django's migration history in-line with the declared state on the model,
            # while the RunSQL brings the DB state in-line with the declared state of the model (mostly)
            # In this case, the DB state operations are short of the declared model state
            #   - we ARE creating a UNIQUE INDEX that would come with the UniqueConstraint,
            #   - but NOT creating the actual CONSTRAINT itself
            state_operations=[
                migrations.AddConstraint(
                    model_name='transactionsearch',
                    constraint=models.UniqueConstraint(fields=('is_fpds', 'transaction'),
                                                       name='ts_idx_is_fpds_transaction_id'),
                ),
            ]
        ),
        migrations.RunSQL(
            # Replace the UNIQUE INDEX for the pkey with just an INDEX on that field
            # When we made this a partitione table, with partition key = is_fpds, UNIQUE indexes now need to include
            # the partition key as well as the unique field
            sql="DROP INDEX rpt.transaction_search_pkey; CREATE INDEX ts_idx_transaction_id ON rpt.transaction_search(transaction_id int8_ops)",
            reverse_sql="DROP INDEX rpt.ts_idx_transaction_id; CREATE UNIQUE INDEX transaction_search_pkey ON rpt.transaction_search(transaction_id int8_ops)",
        )
    ]
